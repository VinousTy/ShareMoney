version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@8.1.0
  aws-ecs: circleci/aws-ecs@3.1.0

jobs:
  backend_test:
    docker:
      - image: circleci/php:7.4-node-browsers
    steps:
      - checkout
      - run:
          working_directory: ./backend/php/app
          command: sudo composer self-update --1
      - restore_cache:
          key: composer-v1-{{ checksum "./backend/php/app/composer.lock" }}
      - run:
          working_directory: ./backend/php/app
          command: composer install -n --prefer-dist
      - save_cache:
          key: composer-v1-{{ checksum "./backend/php/app/composer.lock" }}
          paths:
            - ./backend/php/app/vendor
      - run:
          name: php test
          working_directory: ./backend/php/app
          command: vendor/bin/phpunit tests
  frontend_test:
    docker:
      - image: cimg/node:16.17.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "./frontend/app/package-lock.json" }}
      - run:
          working_directory: ./frontend/app
          command: npm install --save --legacy-peer-deps
      - run:
          working_directory: ./frontend/app
          command: npm install --save --legacy-peer-deps chart.js@latest
      - save_cache:
          key: v1-dependencies-{{ checksum "./frontend/app/package-lock.json" }}
          paths:
            - ./frontend/app/node_modules
      - run:
          working_directory: ./frontend/app
          command: npm test

workflows:
  version: 2.1
  build:
    jobs:
      - backend_test
      - aws-ecr/build-and-push-image:
          requires:
            - backend_test
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          path: './backend/php'
          region: '${AWS_REGION}'
          registry-id: AWS_ECR_REGISTRY_ID
          repo: 'ci_demo_app'
          tag: '${CIRCLE_SHA1}'
          filters:
            branches:
              only:
                - main
      - aws-ecs/deploy-service-update:
          requires:
            - aws-ecr/build-and-push-image
          family: 'laravel-task'
          cluster: 'laravel-cluster'
          service-name: 'laravel-service'
          container-image-name-updates: 'container=laravel_container,tag=${CIRCLE_SHA1}'
          filters:
            branches:
              only:
                - main
      - frontend_test
